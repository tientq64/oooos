{{stylD}}

:root
   --bg-opacity: 1

*, :before, :after
   box-sizing: border-box
   vertical-align: middle

.dark
   background-color: $gray0
   color: #fff
   color-scheme: dark

html
   height: 100%

body
   height: 100%
   margin: 0
   font-family: $sans
   font-size: 16px
   line-height: 1.25
   overflow: hidden
   overflow-wrap: anywhere
   background: #fff
   color: $gray0
   user-select: none
   cursor: default

img, a
   user-drag: none

p
   margin: 0 8px

for val, i in $fontSizes
   h{i + 1}
      font-size: val

small
   font-size: $fontSizes[5]

.Icon
   min-width: 20px
   min-height: 20px
   display: inline-flex
   justify-content: center
   align-items: center
   pointer-events: none

.Icon--img
   object-fit: contain
   image-rendering: -webkit-optimize-contrast

.Icon--compact
   width: unset !important
   min-width: unset

.Button
   min-height: 30px
   padding: 0 8px
   border: 0
   border-radius: 6px
   display: inline-flex
   justify-content: center
   align-items: center
   gap: 8px
   font: inherit
   color: $gray0

.Button--bordered
   border: 1px solid $gray2
   background: #fff

   &:hover
   &.active
      border-color: $gray1
      background: $gray3

      +dark()
         border-color: $gray3
         background: $gray1

   +dark()
      border-color: $gray2
      background: $gray0
      color: #fff

.Button--basic
   background: #0000

   &:hover
   &.active
      background: $gray3

for k, val in $nonGrayColors
   .Button--{k}
      &.Button--bordered
         border-color: val[0]
         background: val[2]
         color: #fff

         &:hover
         &.active
            background: val[1]

      &.Button--basic
         color: val[1]

         &:hover
            background: val[3]

.Button--small
   min-height: 24px

.Button-text
   pointer-events: none

.TextInput
   width: 200px
   height: 30px
   border: 1px solid $gray2
   border-radius: 6px
   display: flex
   align-items: center
   overflow: hidden
   background: #fff

   &:focus-within
      border-color: #0000
      box-shadow: 0 0 0 1px $blue1, 0 0 0 4px rgba($blue1, .4)

      +dark()
         box-shadow: 0 0 0 1px $blue3, 0 0 0 4px rgba($blue3, .4)

   +dark()
      background: $gray0

.TextInput--fill
   width: 100%

.TextInput-leftIcon
   margin-left: 8px

   + .TextInput-input
      margin-left: -28px
      padding-left: 36px

.TextInput-rightIcon
   margin-right: 8px

.TextInput-input
   width: 100%
   height: 100%
   padding: 0 8px
   border: 0
   font: inherit
   background: #0000
   color: $gray0
   outline: 0

   +dark()
      color: #fff

   &:has(+ .TextInput-rightIcon)
      margin-right: -28px
      padding-right: 36px

   &::placeholder
      color: $gray1

      +dark()
         color: $gray3

.Textarea
   width: 200px
   min-height: 30px
   padding: 8px
   border: 1px solid $gray2
   border-radius: 6px
   font: inherit
   background: #fff
   color: $gray0
   outline: 0

   &:focus
      border-color: #0000
      box-shadow: 0 0 0 1px $blue1, 0 0 0 4px rgba($blue1, .4)

      +dark()
         box-shadow: 0 0 0 1px $blue3, 0 0 0 4px rgba($blue3, .4)

   +dark()
      background: $gray0
      color: #fff

   &::placeholder
      color: $gray1

      +dark()
         color: $gray3

.Textarea--fill
   width: 100%

.InputGroup
   display: inline-flex
   align-items: center

   > * + *
      margin-left: -1px

   > * + *
   > * + .InputGroup > :first-child
      border-top-left-radius: 0
      border-bottom-left-radius: 0

   > :has(+ *)
   > .InputGroup:has(+ *) > :last-child
      border-top-right-radius: 0
      border-bottom-right-radius: 0

   > .TextInput
   > .PasswordInput
      flex: 1

      &:focus-within
         z-index: 4

   > .Button
      &:hover
         z-index: 1

   > .Button--hasColor
      z-index: 2

      &:hover
         z-index: 3

.InputGroup--fill
   width: 100%

.PasswordInput--isHidePassword
   .TextInput-input
      text-security: square

.Menu
   min-width: 120px
   max-width: 480px
   padding: 4px
   border: 1px solid $gray2
   border-radius: 6px
   background: #fff

.Menu--basic
   border: 0
   background: #0000

.Menu-item
   min-height: 30px
   padding: 4px 0
   border-radius: 6px
   display: flex
   align-items: center

   &:hover
   &.active
      background: $gray3

for k, val in $nonGrayColors
   .Menu--{k}
      color: val[2]

      &:hover
         background: val[2]
         color: #fff

      > .Menu-label
         color: inherit

.Menu-icon
   margin-left: 8px
   pointer-events: none

.Menu-text
   margin: 0 12px
   flex: 1
   pointer-events: none

.Menu-label
   margin: 0 12px 0 24px
   font-size: 14px
   color: $gray1
   pointer-events: none

.Menu-header
   min-height: 34px
   margin-top: 4px
   padding: 4px 8px 0
   border-top: 1px solid $gray2
   display: flex
   align-items: center
   font-size: 14px
   font-weight: 700

   &:first-child
      min-height: 30px
      margin-top: 0
      padding-top: 0
      border-top: 0

.Menu-divider
   margin: 4px 0
   border-top: 1px solid $gray2

.Menubar
   display: flex
   justify-content: flex-start
   align-items: center

.Table
   border-radius: 6px
   overflow: auto

   thead
      position: sticky
      top: 0
      background: #fff
      box-shadow: inset 0 -1px $gray2
      z-index: 1

   td, th
      height: 30px
      padding: 4px 8px

   th
      text-align: left

.Table--fill
   width: 100%

.Table--striped
   tbody
      tr
         &:nth-child(even)
            background: $gray4

.Table--fixed
   table
      table-layout: fixed

.Table--truncate
   td, th
      text-truncate: ellipsis

.Table--interactive
   tbody
      tr
         &:hover
            background: $gray3

.Table-table
   width: 100%
   border-collapse: collapse

.Popover-popper
   width: max-content
   border-radius: 6px
   background: #fff
   box-shadow: 0 0 0 1px $gray2, $shadow
   z-index: 1020

.Popover-content
   border-radius: 8px
   background: #fff

{{styl}}

#m
   .thumbnail
      padding: 4px
      border: 1px solid #0004
      border-radius: 6px
      background: #fff

   .truncate
      text-truncate: ellipsis

   .row
      display: flex
      flex-direction: row
   .column
      display: flex
      flex-direction: column

   for i in 1..12
      val = floor(i / 12 * 100%)
      :not(.column) > .col-{i}
         width: val
      .column > .col-{i}
         height: val
   .col
      flex: 1
   .col-0
      flex: initial
   :not(.column)
      > .col
      > .col-0
         min-width: 0
   .column
      > .col
      > .col-0
         min-height: 0

   for val in absolute relative fixed sticky
      .{val}
         position: val

   for val in 0 25 50 75 100
      val2 = (val)%
      .w-{val}
         width: val2
      .h-{val}
         height: val2
      .min-w-{val}
         min-width: val2
      .min-h-{val}
         min-height: val2
      .max-w-{val}
         max-width: val2
      .max-h-{val}
         max-height: val2
   .w-auto
      width: auto
   .h-auto
      height: auto
   .min-w-auto
      min-width: auto

   props = {
      m: margin
      p: padding
   }
   for p, prop in props
      for s, sides in $sides3
         for size, z in $spaces
            .{p}{s}-{z}
               for side in sides
                  {prop}{side}: size
            if p == m and z
               .-{p}{s}-{z}
                  for side in sides
                     {prop}{side}: -(size)
         if p == m
            .{p}{s}-auto
               for side in sides
                  {prop}{side}: auto

   .border
      border: 1px solid $gray2

   for val in 2 3 4
      .border-{val}
         border-width: (val)px

   for val in solid dashed dotted
      .border-{val}
         border-style: val

   for k, tones in $colors
      for val, i in tones
         .border-{k}{i}
            border-color: val
   for val in "black" "white" "transparent"
      .border-{val}
         border-color: unquote(val)

   for val, i in 0 4px 6px 8px 16px 32px
      .rounded-{i}
         border-radius: val
   .rounded-pill
      border-radius: 9999px
   .rounded
      border-radius: 6px

   for val in block inline-block inline flex inline-flex grid inline-grid table inline-table
      .{val}
         display: val
   .hidden, [hidden]
      display: none

   .wrap
      flex-wrap: wrap
   .nowrap
      flex-wrap: nowrap

   :not(.column).start
   .column.top
      justify-content: flex-start
   :not(.column).center
   .column.middle
      justify-content: center
   :not(.column).end
   .column.bottom
      justify-content: flex-end

   :not(.column).top
   .column.start
      align-items: flex-start
   :not(.column).middle
   .column.center
      align-items: center
   :not(.column).bottom
   .column.end
      align-items: flex-end

   for val, i in $spaces
      .gap-{i}
         gap: val
   for val, i in $spaces
      .gap-x-{i}
         column-gap: val
      .gap-y-{i}
         row-gap: val

   for val in auto scroll overlay visible hidden
      .ov-{val}
         overflow: val
   for val in auto visible hidden
      .ov-x-{val}
         overflow-x: val
      .ov-y-{val}
         overflow-y: val

   .font-sans
      font-family: $sans
   .font-serif
      font-family: $serif
   .font-mono
      font-family: $mono

   for i in 0 3 4 5 6 7 8
      .lh-{i}
         line-height: (i / 4)

   for val, i in $fontSizes
      .text-{i + 1}
         font-size: val

   .text-light
      font-weight: 300
   .text-regular
      font-weight: 400
   .text-medium
      font-weight: 500
   .text-semibold
      font-weight: 600
   .text-bold
      font-weight: 700

   .text-italic
      font-style: italic
   .text-no-italic
      font-style: normal

   for val in left center right justify
      .text-{val}
         text-align: val

   for val in nowrap pre pre-line pre-wrap
      .text-{val}
         white-space: val
   .text-wrap
      white-space: normal

   for val in left-top right-top left-bottom right-bottom left right top bottom center
      .bg-{val}
         background-position: replace("-", " ", val)

   for val in contain cover auto
      .bg-{val}
         background-size: val

   for val in repeat repeat-x repeat-y no-repeat
      .bg-{val}
         background-repeat: val

   for k, tones in $colors
      for val, i in tones
         .bg-{k}{i}
            background-color: $hexToRgba(val, var(--bg-opacity))
         .text-{k}{i}
            color: val
   for val in "black" "white"
      .bg-{val}
         background-color: $hexToRgba(val, var(--bg-opacity))
      .text-{val}
         color: unquote(val)
   .bg-transparent
      background-color: transparent

   for val in 0 25 50 75 100
      .bg-opacity-{val}
         --bg-opacity: (val / 100)

   for val in 0 25 50 75 100
      .opacity-{val}
         opacity: (val / 100)

   for val in text all auto none
      .select-{val}
         user-select: val

   for val in auto all none
      .pe-{val}
         pointer-events: val

   for val in auto default pointer text copy crosshair zoom-in zoom-out not-allowed none
      .cursor-{val}
         cursor: val

   for val in 0 10 20 30 40 50
      .z-{val}
         z-index: val

   .disabled
      opacity: .6
      pointer-events: none
